import string

# each command is single byte char
START_CHAR = 0xAA
SERIALCMD_PING = 1
SERIALCMD_ENUM_INFO = 2
SERIALCMD_GET_VERSION = 3


SERIALCMD_BOOT_ENTER = 4
SERIALCMD_BOOT_QUIT = 5
SERIALCMD_FLASH_ERASE = 6
SERIALCMD_FLASH_WRITE = 7
SERIALCMD_FLASH_READ = 8
SERIALCMD_SET_VERSION = 9

SERIALCMD_LAST_CMD = 10

# SERIALCMD_STATUS_START = 44
# SERIALCMD_STATUS_STOP =  45
# SERIALCMD_DOPEN     = 46
# SERIALCMD_DCLOSE    = 47
# SERIALCMD_FOPEN     = 48
# SERIALCMD_FCLOSE    = 49
# SERIALCMD_HARDWARE_VERSION  =23

"""
sample frame = ['0xaa', '0x3c', '0x0', '0x16', '0x20', '0x20', '0x32', '0x32', '0x34', '0x37', '0x30', '0x3a', '0x20', '0x41', 
'0x72', '0x63', '0x68', '0x69', '0x76', '0x69', '0x6e', '0x67', '0x20', '0x64', '0x69', '0x72', '0x65', '0x63', 
'0x74', '0x6f', '0x72', '0x79', '0x20', '0x5c', '0x64', '0x61', '0x74', '0x61', '0x5c', '0x64', '0x61', '0x74', 
'0x61', '0x5f', '0x30', '0x30', '0x30', '0x31', '0x30', '0x31', '0x5c', '0x30', '0x30', '0x30', '0x31', '0x32', 
'0x30', '0x0', '0x2d', '0x90']




f=['0xaa', '0x1e', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x34', '0x3a', '0x20', '0x4d', '0x4f', '0x54', '0x49', '0x4f', '0x4e', '0x20', '0x53', '0x54', '0x4f', '0x50', '0x50', '0x45', '0x44', '0x0', '0x1c', '0x54', '0xaa', '0x56', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x34', '0x3a', '0x20', '0x4d', '0x6f', '0x74', '0x6f', '0x72', '0x20', '0x32', '0x20', '0x53', '0x74', '0x6f', '0x70', '0x70', '0x65', '0x64', '0x2c', '0x20', '0x50', '0x65', '0x61', '0x6b', '0x20', '0x3d', '0x20', '0x30', '0x2c', '0x20', '0x56', '0x61', '0x6c', '0x6c', '0x65', '0x79', '0x20', '0x3d', '0x20', '0x30', '0x2c', '0x20', '0x43', '0x75', '0x72', '0x4c', '0x69', '0x6d', '0x69', '0x74', '0x20', '0x3d', '0x20', '0x38', '0x30', '0x30', '0x30', '0x2c', '0x20', '0x53', '0x47', '0x50', '0x65', '0x61', '0x6b', '0x20', '0x3d', '0x20', '0x20', '0x20', '0x30', '0x2e', '0x30', '0x0', '0x1d', '0xef', '0xaa', '0x3a', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x35', '0x3a', '0x20', '0x45', '0x6e', '0x64', '0x69', '0x6e', '0x67', '0x20', '0x74', '0x61', '0x73', '0x6b', '0x20', '0x70', '0x72', '0x69', '0x6f', '0x72', '0x69', '0x74', '0x79', '0x20', '0x38', '0x20', '0x2d', '0x20', '0x4d', '0x6f', '0x74', '0x6f', '0x72', '0x20', '0x54', '0x65', '0x73', '0x74', '0x20', '0x4f', '0x62', '0x6a', '0x65', '0x63', '0x74', '0x0', '0xf0', '0x3e', '0xaa', '0x24', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x35', '0x3a', '0x20', '0x4d', '0x6f', '0x74', '0x6f', '0x72', '0x20', '0x54', '0x65', '0x73', '0x74', '0x20', '0x52', '0x65', '0x73', '0x75', '0x6c', '0x74', '0x73', '0x3a', '0x20', '0x0', '0xa0', '0x42', '0xaa', '0x42', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x35', '0x3a', '0x20', '0x20', '0x20', '0x20', '0x4d', '0x6f', '0x74', '0x6f', '0x72', '0x20', '0x41', '0x30', '0x20', '0x3d', '0x20', '0x50', '0x41', '0x53', '0x53', '0x20', '0x4d', '0x6f', '0x74', '0x6f', '0x72', '0x20', '0x42', '0x31', '0x20', '0x3d', '0x20', '0x50', '0x41', '0x53', '0x53', '0x20', '0x4d', '0x6f', '0x74', '0x6f', '0x72', '0x20', '0x43', '0x32', '0x20', '0x3d', '0x20', '0x50', '0x41', '0x53', '0x53', '0x0', '0xe', '0x44', '0xaa', '0x3d', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x35', '0x3a', '0x20', '0x53', '0x4d', '0x5f', '0x4e', '0x65', '0x77', '0x53', '0x79', '0x73', '0x74', '0x65', '0x6d', '0x45', '0x76', '0x65', '0x6e', '0x74', '0x41', '0x6c', '0x65', '0x72', '0x74', '0x3a', '0x20', '0x49', '0x4e', '0x49', '0x54', '0x5f', '0x43', '0x4f', '0x4d', '0x50', '0x4c', '0x45', '0x54', '0x45', '0x5f', '0x54', '0x49', '0x4d', '0x45', '0x4f', '0x55', '0x54', '0x0', '0xf9', '0xd9', '0xaa', '0x1f', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x36', '0x3a', '0x20', '0x50', '0x69', '0x65', '0x7a', '0x6f', '0x3a', '0x20', '0x41', '0x6c', '0x6c', '0x20', '0x47', '0x6f', '0x6f', '0x64', '0x0', '0xe3', '0xd', '0xaa', '0x2d', '0x0', '0x16', '0x20', '0x20', '0x20', '0x39', '0x36', '0x35', '0x36', '0x3a', '0x20', '0x73', '0x79', '0x73', '0x74', '0x65', '0x6d', '0x43', '0x68', '0x65', '0x63', '0x6b', '0x43', '0x6f', '0x6d', '0x70', '0x6c', '0x65', '0x74', '0x65', '0x64', '0x20', '0x63', '0x6f', '0x6d', '0x70', '0x6c', '0x65', '0x74', '0x65', '0x0', '0x54', '0xd7']
"""
DP_PARAM_USAGE = 19
DM_PARAM = {
    0: "DM_PARAM_INVALID",
    1: "DM_PARAM_ACTIVE_PP_TIMESTAMP",
    2: "DM_PARAM_ACTIVE_PP_BL_TIMESTAMP",
    3: "DM_PARAM_ACTIVE_FPGA_TIMESTAMP",
    4: "DM_PARAM_BLOB_AGILE_NUMBER",
    5: "DM_PARAM_BLOB_TIMESTAMP",
    6: "DM_PARAM_BLOB_FLAGS",
    7: "DM_PARAM_BLOB_PP_REVISION",
    8: "DM_PARAM_BLOB_PP_TIMESTAMP",
    9: "DM_PARAM_BLOB_PP_BL_REVISION",
    10: "DM_PARAM_BLOB_PP_BL_TIMESTAMP",
    11: "DM_PARAM_BLOB_FPGA_REVISION",
    12: "DM_PARAM_BLOB_FPGA_TIMESTAMP",
    13: "DM_PARAM_BLOB_ADAPT_BOOT_REVISION",
    14: "DM_PARAM_BLOB_ADAPT_BOOT_TIMESTAMP",
    15: "DM_PARAM_BLOB_ADAPT_EGIA_REVISION",
    16: "DM_PARAM_BLOB_ADAPT_EGIA_TIMESTAMP",
    17: "DM_PARAM_BLOB_ADAPT_EEA_REVISION",
    18: "DM_PARAM_BLOB_ADAPT_EEA_TIMESTAMP",
    DP_PARAM_USAGE: "DM_PARAM_PP_USE_COUNTS",
    20: "DM_PARAM_BLOB_SYS_VERSION",
    21: "DM_PARAM_COUNT",
}


def extract_frames(fr):
    """
    fr is a list of one or more frames
    id each seperate frame and put it in a list
    return a tuple[0] list of valid frames, [1] incomplete frame
    """
    sz = fr[2] * 255 + fr[1]
    ls = []
    remainder = None

    while 1:
        if len(fr) >= sz:
            sz = fr[2] * 256 + fr[1]
            ls.append(fr[0:sz])

            fr = fr[sz:]
            if len(fr) > 3:
                sz = fr[2] * 256 + fr[1]
            else:
                sz = len(fr) + 1  # Force an end to while loop

        else:
            if len(fr) <= 0:
                return (ls, None)
            return (ls, fr)


def format_frame(ff=None):
    """
    format given gen2 string into readable ascii
    [170,  25, 0,    2, 	 0, 83, 69, 82, 73, 65, 76, 67, 77, 68, 95, 85, 78, 75, 78, 79, 87, 78, 0, 111, 97]
    start, sz, sz,  resp_id, id, stringname
    """
    sz = (
        ff[2] * 255 + ff[1]
    )  # first 4 char are protocol not data startbyte: f[0], lowbyte Sz = f[1], HiByte Sz = f[2], cmd id: f[3]60

    cmd_id = ff[3]

    cmd_name = ff[5 : (sz - 2)]
    fr = (
        str(map(chr, cmd_name))
        .replace("', '", "")
        .replace("['", "")
        .replace("']", "")
        .replace("\\x00", "")
    )

    # 	printable = set(string.printable)
    # 	fr = filter(lambda x: x in printable, fr)

    return {"frame": fr, "id": cmd_id}


def get_formatted_frames(frames):
    list_of_frames = extract_frames(frames)  # expt array of numbers[170, 32,0, 2]
    formmatted_frames = []

    for frame in list_of_frames:
        formmatted_frames.append(format_frame(frame))

    return formmatted_frames


MAX_COMMANDS = 200

# create a list of commands, each cmd is a single byte its position in the list matches its command id
# COMMAND_LIST = [None]* MAX_COMMANDS
COMMAND_LIST = [("None", [])] * MAX_COMMANDS


COMMAND_LIST[SERIALCMD_PING] = ("SERIALCMD_PING", [0xAA, 0x06, 0x00, 0x01, 0x00, 0x19])
COMMAND_LIST[SERIALCMD_ENUM_INFO] = (
    "SERIALCMD_ENUM_INFO",
    [0xAA, 0x06, 0x00, 0x02, 0x40, 0x18],
)
# COMMAND_LIST[SERIALCMD_GET_VERSION] = 	('SERIALCMD_GET_VERSION', 		[0xAA, 0x06, 0x00, 12, 0xc1, 0xdc])


# COMMAND_LIST[SERIALCMD_STATUS_START] = 	('SERIALCMD_STATUS_START', 		[0xAA, 0x06, 0x00, 44, 0xc0, 0x04 ])
# COMMAND_LIST[SERIALCMD_STATUS_STOP] = 	('SERIALCMD_STATUS_STOP', 		[0xAA, 0x06, 0x00, 45, 0x01, 0xc4])

# COMMAND_LIST[SERIALCMD_DOPEN] = 		('SERIALCMD_DOPEN', 			[0xAA, 0x06, 0x00, 45, 0x01, 0xc4])
# COMMAND_LIST[SERIALCMD_DCLOSE] = 		('SERIALCMD_DCLOSE', 			[0xAA, 0x06, 0x00, 46, 0x41, 0xc5])

# COMMAND_LIST[SERIALCMD_FOPEN]	=     	('SERIALCMD_FOPEN',				[0xAA, 0x06, 0x00, 47, 0x80, 0x05])
# COMMAND_LIST[SERIALCMD_FCLOSE]    = 	('SERIALCMD_FCLOSE',			[0xAA, 0x06, 0x00, 48, 0xc1, 0xcd])


# SERIALCMD_NEXT_FILE_NAME = 50
# COMMAND_LIST[SERIALCMD_NEXT_FILE_NAME] =('SERIALCMD_NEXT_FILE_NAME',	[0xAA, 0x06, 0x00, SERIALCMD_NEXT_FILE_NAME, 0x00, 0x0d])
# COMMAND_LIST[SERIALCMD_HARDWARE_VERSION]=('SERIALCMD_HARDWARE_VERSION',	[170, 6, 0, SERIALCMD_HARDWARE_VERSION, 129, 215])
# SERIALCMD_GET_SERIALNUM = 111
# COMMAND_LIST[SERIALCMD_GET_SERIALNUM]=('SERIALCMD_GET_SERIALNUM',		[170, 6, 0, SERIALCMD_GET_SERIALNUM, 129, 245])

if __name__ == "__main__":
    fr1 = [
        "0xaa",
        "0x3c",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x32",
        "0x32",
        "0x34",
        "0x37",
        "0x30",
        "0x3a",
        "0x20",
        "0x41",
        "0x72",
        "0x63",
        "0x68",
        "0x69",
        "0x76",
        "0x69",
        "0x6e",
        "0x67",
        "0x20",
        "0x64",
        "0x69",
        "0x72",
        "0x65",
        "0x63",
        "0x74",
        "0x6f",
        "0x72",
        "0x79",
        "0x20",
        "0x5c",
        "0x64",
        "0x61",
        "0x74",
        "0x61",
        "0x5c",
        "0x64",
        "0x61",
        "0x74",
        "0x61",
        "0x5f",
        "0x30",
        "0x30",
        "0x30",
        "0x31",
        "0x30",
        "0x31",
        "0x5c",
        "0x30",
        "0x30",
        "0x30",
        "0x31",
        "0x32",
        "0x30",
        "0x0",
        "0x2d",
        "0x90",
    ]
    fr2 = [
        "0xaa",
        "0x1e",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x34",
        "0x3a",
        "0x20",
        "0x4d",
        "0x4f",
        "0x54",
        "0x49",
        "0x4f",
        "0x4e",
        "0x20",
        "0x53",
        "0x54",
        "0x4f",
        "0x50",
        "0x50",
        "0x45",
        "0x44",
        "0x0",
        "0x1c",
        "0x54",
        "0xaa",
        "0x56",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x34",
        "0x3a",
        "0x20",
        "0x4d",
        "0x6f",
        "0x74",
        "0x6f",
        "0x72",
        "0x20",
        "0x32",
        "0x20",
        "0x53",
        "0x74",
        "0x6f",
        "0x70",
        "0x70",
        "0x65",
        "0x64",
        "0x2c",
        "0x20",
        "0x50",
        "0x65",
        "0x61",
        "0x6b",
        "0x20",
        "0x3d",
        "0x20",
        "0x30",
        "0x2c",
        "0x20",
        "0x56",
        "0x61",
        "0x6c",
        "0x6c",
        "0x65",
        "0x79",
        "0x20",
        "0x3d",
        "0x20",
        "0x30",
        "0x2c",
        "0x20",
        "0x43",
        "0x75",
        "0x72",
        "0x4c",
        "0x69",
        "0x6d",
        "0x69",
        "0x74",
        "0x20",
        "0x3d",
        "0x20",
        "0x38",
        "0x30",
        "0x30",
        "0x30",
        "0x2c",
        "0x20",
        "0x53",
        "0x47",
        "0x50",
        "0x65",
        "0x61",
        "0x6b",
        "0x20",
        "0x3d",
        "0x20",
        "0x20",
        "0x20",
        "0x30",
        "0x2e",
        "0x30",
        "0x0",
        "0x1d",
        "0xef",
        "0xaa",
        "0x3a",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x35",
        "0x3a",
        "0x20",
        "0x45",
        "0x6e",
        "0x64",
        "0x69",
        "0x6e",
        "0x67",
        "0x20",
        "0x74",
        "0x61",
        "0x73",
        "0x6b",
        "0x20",
        "0x70",
        "0x72",
        "0x69",
        "0x6f",
        "0x72",
        "0x69",
        "0x74",
        "0x79",
        "0x20",
        "0x38",
        "0x20",
        "0x2d",
        "0x20",
        "0x4d",
        "0x6f",
        "0x74",
        "0x6f",
        "0x72",
        "0x20",
        "0x54",
        "0x65",
        "0x73",
        "0x74",
        "0x20",
        "0x4f",
        "0x62",
        "0x6a",
        "0x65",
        "0x63",
        "0x74",
        "0x0",
        "0xf0",
        "0x3e",
        "0xaa",
        "0x24",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x35",
        "0x3a",
        "0x20",
        "0x4d",
        "0x6f",
        "0x74",
        "0x6f",
        "0x72",
        "0x20",
        "0x54",
        "0x65",
        "0x73",
        "0x74",
        "0x20",
        "0x52",
        "0x65",
        "0x73",
        "0x75",
        "0x6c",
        "0x74",
        "0x73",
        "0x3a",
        "0x20",
        "0x0",
        "0xa0",
        "0x42",
        "0xaa",
        "0x42",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x35",
        "0x3a",
        "0x20",
        "0x20",
        "0x20",
        "0x20",
        "0x4d",
        "0x6f",
        "0x74",
        "0x6f",
        "0x72",
        "0x20",
        "0x41",
        "0x30",
        "0x20",
        "0x3d",
        "0x20",
        "0x50",
        "0x41",
        "0x53",
        "0x53",
        "0x20",
        "0x4d",
        "0x6f",
        "0x74",
        "0x6f",
        "0x72",
        "0x20",
        "0x42",
        "0x31",
        "0x20",
        "0x3d",
        "0x20",
        "0x50",
        "0x41",
        "0x53",
        "0x53",
        "0x20",
        "0x4d",
        "0x6f",
        "0x74",
        "0x6f",
        "0x72",
        "0x20",
        "0x43",
        "0x32",
        "0x20",
        "0x3d",
        "0x20",
        "0x50",
        "0x41",
        "0x53",
        "0x53",
        "0x0",
        "0xe",
        "0x44",
        "0xaa",
        "0x3d",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x35",
        "0x3a",
        "0x20",
        "0x53",
        "0x4d",
        "0x5f",
        "0x4e",
        "0x65",
        "0x77",
        "0x53",
        "0x79",
        "0x73",
        "0x74",
        "0x65",
        "0x6d",
        "0x45",
        "0x76",
        "0x65",
        "0x6e",
        "0x74",
        "0x41",
        "0x6c",
        "0x65",
        "0x72",
        "0x74",
        "0x3a",
        "0x20",
        "0x49",
        "0x4e",
        "0x49",
        "0x54",
        "0x5f",
        "0x43",
        "0x4f",
        "0x4d",
        "0x50",
        "0x4c",
        "0x45",
        "0x54",
        "0x45",
        "0x5f",
        "0x54",
        "0x49",
        "0x4d",
        "0x45",
        "0x4f",
        "0x55",
        "0x54",
        "0x0",
        "0xf9",
        "0xd9",
        "0xaa",
        "0x1f",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x36",
        "0x3a",
        "0x20",
        "0x50",
        "0x69",
        "0x65",
        "0x7a",
        "0x6f",
        "0x3a",
        "0x20",
        "0x41",
        "0x6c",
        "0x6c",
        "0x20",
        "0x47",
        "0x6f",
        "0x6f",
        "0x64",
        "0x0",
        "0xe3",
        "0xd",
        "0xaa",
        "0x2d",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x36",
        "0x35",
        "0x36",
        "0x3a",
        "0x20",
        "0x73",
        "0x79",
        "0x73",
        "0x74",
        "0x65",
        "0x6d",
        "0x43",
        "0x68",
        "0x65",
        "0x63",
        "0x6b",
        "0x43",
        "0x6f",
        "0x6d",
        "0x70",
        "0x6c",
        "0x65",
        "0x74",
        "0x65",
        "0x64",
        "0x20",
        "0x63",
        "0x6f",
        "0x6d",
        "0x70",
        "0x6c",
        "0x65",
        "0x74",
        "0x65",
        "0x0",
        "0x54",
        "0xd7",
    ]

    fr3 = [
        "0xaa",
        "0x27",
        "0x0",
        "0x2",
        "0x40",
        "0x53",
        "0x45",
        "0x52",
        "0x49",
        "0x41",
        "0x4c",
        "0x43",
        "0x4d",
        "0x44",
        "0x5f",
        "0x4f",
        "0x4e",
        "0x45",
        "0x57",
        "0x49",
        "0x52",
        "0x45",
        "0x5f",
        "0x47",
        "0x45",
        "0x54",
        "0x5f",
        "0x43",
        "0x4f",
        "0x4e",
        "0x4e",
        "0x45",
        "0x43",
        "0x54",
        "0x45",
        "0x44",
        "0x0",
        "0xed",
        "0xb0",
    ]

    fr4 = [
        "0xaa",
        "0x30",
        "0x0",
        "0x16",
        "0x20",
        "0x20",
        "0x20",
        "0x39",
        "0x31",
        "0x33",
        "0x31",
        "0x3a",
        "0x20",
        "0x41",
        "0x64",
        "0x61",
        "0x70",
        "0x74",
        "0x65",
        "0x72",
        "0x2c",
        "0x20",
        "0x53",
        "0x74",
        "0x72",
        "0x61",
        "0x69",
        "0x6e",
        "0x20",
        "0x47",
        "0x61",
        "0x75",
        "0x67",
        "0x65",
        "0x20",
        "0x45",
        "0x72",
        "0x72",
        "0x6f",
        "0x72",
        "0x20",
        "0x3d",
        "0x20",
        "0x31",
        "0x39",
        "0x0",
        "0xb7",
        "0xff",
        "0xaa",
        "0x27",
        "0x0",
        "0x2",
        "0x40",
        "0x53",
        "0x45",
        "0x52",
        "0x49",
        "0x41",
        "0x4c",
        "0x43",
        "0x4d",
        "0x44",
        "0x5f",
        "0x4f",
        "0x4e",
        "0x45",
        "0x57",
        "0x49",
        "0x52",
        "0x45",
        "0x5f",
        "0x47",
        "0x45",
        "0x54",
        "0x5f",
        "0x43",
        "0x4f",
        "0x4e",
        "0x4e",
        "0x45",
        "0x43",
        "0x54",
        "0x45",
        "0x44",
        "0x0",
        "0xed",
        "0xb0",
    ]

    fr5 = [
        170,
        39,
        0,
        2,
        64,
        83,
        69,
        82,
        73,
        65,
        76,
        67,
        77,
        68,
        95,
        79,
        78,
        69,
        87,
        73,
        82,
        69,
        95,
        71,
        69,
        84,
        95,
        67,
        79,
        78,
        78,
        69,
        67,
        84,
        69,
        68,
        0,
        237,
        176,
        170,
        8,
        0,
        3,
        0,
        1,
        200,
        11,
    ]
    pf = fr5

    print("*******************************************")
    print("Test two frames")
    dcts = get_formatted_frames(pf)
    print("get_formatted_frames: %s" % dcts)

    # /************************* convert string to ints before frame
    print("*******************************************")
    print("Test extracted multiple frames")
    pf = map(eval, fr2)
    dcts = get_formatted_frames(pf)
    print("get_formatted_frames: %s" % dcts)

    if 0:
        dcts = get_formatted_frames(pf)
        print("\tnbr frames: %s" % len(dcts))
        for dct in dcts:
            print("dct['frame'] %s" % (dct["frame"]))

        printable = set(string.printable)
        print(filter(lambda x: x in printable, map(eval, fr2)))
